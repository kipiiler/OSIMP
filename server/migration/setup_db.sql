drop table if exists public.email_notifications;

create table
  public.email_notifications (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    user_id uuid not null default auth.uid (),
    form_id bigint not null,
    contents character varying not null,
    subject character varying not null,
    constraint emails_pkey primary key (id),
    constraint public_emails_form_id_fkey foreign key (form_id) references forms (id),
    constraint public_emails_user_id_fkey foreign key (user_id) references users (user_id)
  ) tablespace pg_default;

drop table if exists public.forms;

create table
  public.forms (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    state character varying not null default ''::character varying,
    constraint forms_pkey primary key (id)
  ) tablespace pg_default;

drop table if exists public.interview_pair;

create table
  public.interview_pair (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    form_id bigint not null,
    interviewer_id uuid not null default gen_random_uuid (),
    interviewee_id uuid not null default gen_random_uuid (),
    problem_id bigint null,
    constraint pairs_pkey primary key (id),
    constraint interview_pair_problem_id_fkey foreign key (problem_id) references problems (id),
    constraint public_pairs_form_id_fkey foreign key (form_id) references forms (id)
  ) tablespace pg_default;

drop table if exists public.problems;

create table
  public.problems (
    problem_url character varying(255) not null,
    created_at timestamp without time zone not null default current_timestamp,
    topic character varying not null,
    id bigint generated by default as identity,
    constraint problems_pkey primary key (id),
    constraint problems_id_key unique (id)
  ) tablespace pg_default;

drop table if exists public.signups;

create table
  public.signups (
    created_at timestamp with time zone not null default now(),
    form_id bigint not null,
    availability json not null,
    user_id uuid not null default auth.uid (),
    constraint signups_pkey primary key (form_id, user_id),
    constraint public_signups_form_id_fkey foreign key (form_id) references forms (id),
    constraint public_signups_user_id_fkey foreign key (user_id) references auth.users (id)
  ) tablespace pg_default;

drop table if exists public.unpaired;

create table
  public.unpaired (
    form_id bigint not null,
    user_id uuid not null default auth.uid (),
    created_at timestamp with time zone not null default now(),
    constraint unpaired_pkey primary key (form_id, user_id),
    constraint public_unpaired_form_id_fkey foreign key (form_id) references forms (id),
    constraint public_unpaired_user_id_fkey foreign key (user_id) references users (user_id)
  ) tablespace pg_default;

drop table if exists public.users;

create table
  public.users (
    user_id uuid not null default auth.uid (),
    discord character varying not null,
    email character varying not null,
    created_at timestamp with time zone not null default (now() at time zone 'utc'::text),
    first_name character varying not null,
    last_name character varying not null,
    grad_year integer not null,
    major character varying not null,
    leetcode character varying null,
    constraint users_pkey primary key (user_id),
    constraint users_discord_key unique (discord),
    constraint users_email_key unique (email),
    constraint public_users_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;
